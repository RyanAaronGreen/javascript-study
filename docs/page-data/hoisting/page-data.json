{"componentChunkName":"component---src-templates-blog-post-js","path":"/hoisting/","result":{"data":{"site":{"siteMetadata":{"title":"A Study into the Details of JavaScript"}},"markdownRemark":{"id":"65b93982-c0a2-5204-8cab-97b9dab34d8b","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Hoisting in JavaScript</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">variableDeclarations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n   \n  <span class=\"token keyword\">var</span> messageOne<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Declaration</span>\n  messageOne <span class=\"token operator\">=</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Initialization</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>messageOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns 'one'</span>\n\n  messageTwo <span class=\"token operator\">=</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// No hoisting, but since initialization happens (and there is not declaration already), it also causes declaration</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>messageTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns 'two'</span>\n  \n  messageThree <span class=\"token operator\">=</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Initialization</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>messageThree<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns 'three'</span>\n  <span class=\"token keyword\">var</span> messageThree<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Declaration causes variable to be hoisted</span>\n  \n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>messageFour<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns undefined as it sees the hoisted variable, but the initialization happens after</span>\n  <span class=\"token keyword\">var</span> messageFour<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Declaration</span>\n  messageFour <span class=\"token operator\">=</span> <span class=\"token string\">'four'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Initialization</span>\n  \n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>messageFive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns undefined as it sees the hoisted variable, but the initialization happens after</span>\n  <span class=\"token keyword\">var</span> messageFive <span class=\"token operator\">=</span> <span class=\"token string\">'five'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Delaration &amp; Initialization</span>\n  \n  <span class=\"token comment\">// console.log(messageZ); // Throws Reference Error as it doesn't see any declaration and therefore doesn't know if the variable exists</span>\n  <span class=\"token comment\">// messageZ = 'This is message Z'; // Only Initialization  </span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">functionDeclarations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Function declarations are hoisted to the top of their scope.</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">messageOne</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message: '</span> <span class=\"token operator\">+</span> message <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">messageOne</span><span class=\"token punctuation\">(</span><span class=\"token string\">'I am seemingly called AFTER my function\\'s declaration. Will I show up in the console log?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token function\">messageTwo</span><span class=\"token punctuation\">(</span><span class=\"token string\">'I am seemingly called BEFORE my function\\'s declaration. Will I show up in the console log?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n  <span class=\"token comment\">// Both function calls show up in the console log because function declarations are hoisted to the top of their scope! </span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">messageTwo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message: '</span> <span class=\"token operator\">+</span> message <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">variableDeclarations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">functionDeclarations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>","frontmatter":{"title":"Hoisting","date":"March 25, 2020","description":"Exploring the world of Hoisting"}}},"pageContext":{"slug":"/hoisting/","previous":{"fields":{"slug":"/closures/"},"frontmatter":{"title":"Closure"}},"next":{"fields":{"slug":"/prototypal/"},"frontmatter":{"title":"Class & Prototypal Inheritance"}}}}}